name: Test

on: [workflow_call]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_USER: postgres
          POSTGRES_DB: ylitse
          POSTGRES_PASSWORD: ${{ secrets.YLITSE_POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Create licenses list
        run: npm run licenses:create
      - name: Run unit tests
        run: npm run test:unit
      - name: Clone the back end
        run: git clone https://gitlab.com/ylitse/ylitse-api
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: ylitse-api/requirements.txt
      - name: Set up the back end
        run: |
          make env
          source env/bin/activate
          make conf
          make db-upgrade-head 
          make db-insert-admin 
        env:
          YLITSE_POSTGRES_URL: postgresql://postgres:${{ secrets.YLITSE_POSTGRES_PASSWORD }}@localhost/ylitse
        working-directory: ylitse-api
      - name: Cache cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Run E2E tests
        run: |
          ${{ github.workspace }}/.github/scripts/start-api &

          export YLITSE_API_PASS=$(grep -oP '(?<=admin_password: ).*' ./ylitse-api/ylitse_conf/ylitse.conf)
          export YLITSE_MFA_SECRET=$(grep -oP '(?<=admin_2fa: ).*' ./ylitse-api/ylitse_conf/ylitse.conf)

          npm run start &
          npm run test:e2e
